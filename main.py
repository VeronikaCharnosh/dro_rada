import telebot
from telebot import types


bot = telebot.TeleBot('6648171588:AAHXlel6-fD4PZ7G5l7Q--_gQsE5RFV-f8o')


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤—ñ—Ç! –©–æ –∂ –æ–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É', reply_markup=first_menu())


def first_menu():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('üí° –ü—Ä–æ –º—ñ—Å—Ç–æ')
    markup.row(btn1)
    btn2 = telebot.types.KeyboardButton('–¢–Ü–¶ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î')
    btn3 = telebot.types.KeyboardButton('–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è —Ç–∞ –¥–µ –ø–µ—Ä–µ–Ω–æ—á—É–≤–∞—Ç–∏')
    markup.row(btn2, btn3)
    btn4 = telebot.types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¢–Ü–¶ –º. –î—Ä–æ–≥–æ–±–∏—á–∞')
    btn5 = telebot.types.KeyboardButton('–¢–µ–º–∞—Ç–∏—á–Ω—ñ –∫–∞—Ä—Ç–∏')
    markup.row(btn4, btn5)
    btn6 = telebot.types.KeyboardButton('–†–µ–≥—ñ–æ–Ω')
    btn7 = telebot.types.KeyboardButton('–°—É–≤–µ–Ω—ñ—Ä–∏')
    markup.row(btn6, btn7)
    return markup

def menu_for_recomend():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('–í–∞—Ä—Ç–æ –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏')
    btn2 = telebot.types.KeyboardButton('–ú—É–∑–µ–π')
    btn3 = telebot.types.KeyboardButton('–ü–æ–¥—ñ—ó')
    btn4 = telebot.types.KeyboardButton('–ï–∫—Å–∫—É—Ä—Å—ñ—ó')
    btn5 = telebot.types.KeyboardButton('–ì—ñ–¥–∏')
    btn6 = telebot.types.KeyboardButton('–ì–∞—Å—Ç—Ä–æ —Ñ—ñ—à–∫–∏')
    btn7 = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
    markup.row(btn1, btn2, btn3)
    markup.row(btn4, btn5, btn6)
    markup.row(btn7)
    return markup

def menu_for_column3():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton('–ì–æ—Ç–µ–ª—ñ/ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏')
    btn2 = telebot.types.KeyboardButton('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')
    btn3 = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
    markup.row(btn1)
    markup.row(btn2)
    markup.row(btn3)
    return markup


@bot.message_handler(content_types=['text'])
def text_handler(message):
    cid = message.chat.id
    if message.text.strip() == 'üí° –ü—Ä–æ –º—ñ—Å—Ç–æ':
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('üí°–ö–æ—Ä–æ—Ç–∫–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', callback_data = 'short_info')
        markup.add(btn1)
        bot.send_message(cid, '–î–µ—è–∫–∞ –∫–æ—Ä–∏—Å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –Ω–∞—Å', reply_markup = markup)
    elif message.text.strip() == '–¢–Ü–¶ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î':
        bot.send_message(cid, '–¢–Ü–¶ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î', reply_markup = menu_for_recomend())
    elif message.text.strip() == '–í–∞—Ä—Ç–æ –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏':
        bot.send_message(cid, '1. –ü–ª–æ—â–∞ –†–∏–Ω–æ–∫\n\
2.–í—É–ª. –¢–∞—Ä–∞—Å–∞ –®–µ–≤—á–µ–Ω–∫–∞ –≤—É–ª–∏—Ü—è –Ω–∞—Ñ—Ç–æ–∞–∏—Ö –º–∞–≥–º–∞–Ω–∞—Ç—ñ–≤\n\
3.–í—É–ª. –Ü–∞–Ω–∞ –§—Ä–∞–Ω–∫–∞\n\
4.–í—É–ª. –õ–µ—Å—ñ –£–∫—Ä–∞—ó–Ω–∫–∏\n\
5. –¶–µ—Ä–∫–≤–∏\n\
6.–ü–∞–º`—è—Ç–Ω–∏–∫–∏\n\
7. —Ç–æ–ø 5 –ª–æ–∫–∞—Ü—ñ–π –∑ —Å–∞–π—Ç—É\n\
8.–í—É–ª–∏—á–Ω–∏–π –º—É–∑–µ–π, –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç\n ')
    elif message.text.strip() == '–ú—É–∑–µ–π':
        bot.send_message(cid, '6 –ª–æ–∫–∞—Ü—ñ–π –º—É–∑–µ—é,—ñ–Ω–æ—Ä–º–∞—Ü—ñ—è, —Ü—ñ–Ω–∞ —ñ –≥–æ–¥ —Ä–æ–±–æ—Ç–∏\n\
–Ω–∞–∑–≤–∞ –º—É–∑–µ—é —Ñ–æ—Ç–æ –≥–æ–¥–∏–Ω–∏ —Ä–æ–±–æ—Ç–∏ —ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç\n ') 
    elif message.text.strip() == '–ü–æ–¥—ñ—ó':
        bot.send_message(cid, '1.–∫—É–¥–∏ –ø—ñ—Ç–∏ –¥—Ä–æ–≥–æ–±–∏—á\n\
2.—Ç–µ–∞—Ç—Ä/ –∫—ñ–Ω–æ—Ç–µ–∞—Ç—Ä –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è, —Ñ–æ—Ç–æ, —Ç–µ–ª –¥–ª—è –¥–æ–≤—ñ–¥–æ–∫\n ') 
    elif message.text.strip() == '–ï–∫—Å–∫—É—Ä—Å—ñ—ó':
        bot.send_message(cid, '1.—Å–æ–ª–µ–≤–∞—Ä–Ω—è\n\
2.–ø—ñ–¥–Ω—è—Ç—Ç—è –Ω–∞ –≤–µ–∂—É\n\
3.—Ç–µ–∞—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞\n\
4.—à–ø–∞—Ü–µ—Ä\n\
5.–µ–∫—Å–∫—É—Ä—Å—ñ—è –≤ –¥–≤–æ—Ä–∏–∫—É\n\
6.–µ–∫—Å–∫—É—Ä—Å—ñ—è –º—ñ—Å—Ç–æ–º\n ')
    elif message.text.strip() == '–ì—ñ–¥–∏':
        bot.send_message(cid, '1. –ø–µ—Ä–µ–ª—ñ–∫ –≥—ñ–¥—ñ–≤\n\
2. —Ñ–æ—Ç–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–æ–≤–∏ —Ç–µ–ª–µ—Ñ–æ–Ω')
    elif message.text.strip() == '–ì–∞—Å—Ç—Ä–æ —Ñ—ñ—à–∫–∏':
        bot.send_message(cid, '1. –ó–∞–∫–ª–∞–¥–∏ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è\n\
2. —Ñ–æ—Ç–æ –≥–∞—Å—Ç—Ä–æ—Ñ—ñ—à–∫–∏ + –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—Å—Ç—É')
    elif message.text.strip() == '–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è —Ç–∞ –¥–µ –ø–µ—Ä–µ–Ω–æ—á—É–≤–∞—Ç–∏':
        bot.send_message(cid, '–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è —Ç–∞ –¥–µ –ø–µ—Ä–µ–Ω–æ—á—É–≤–∞—Ç–∏', reply_markup = menu_for_column3())
    elif message.text.strip() == '–ù–∞–∑–∞–¥ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é':
        bot.send_message(cid, '–≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é', reply_markup = first_menu())
    elif message.text.strip() == '–ì–æ—Ç–µ–ª—ñ/ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏':
        bot.send_message(cid, '1.–ë–æ–º–±–æ–Ω—î—Ä–∫–∞\n\
2.–∑–µ—Ñ—ñ—Ä\n\
3.–±—É–¥–∏–Ω–æ–∫ —Å–∞–º–∞—Ä—è–Ω–∏–Ω–∞\n\
4.–ª–∏–º–æ–Ω\n\
5.–Ω–æ–≤–∞ —Ö–∞—Ç–∞')
    elif message.text.strip() == '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
        bot.send_message(cid, ' <b>–ì—Ä–æ–º–∞–¥—Å—å–∫–∏–π</b>\n\
1.–ê–≤—Ç–æ—Å—Ç–∞–Ω—Ü—ñ—è\n\
2.–ñ/–î\n\
3.–ø—Ä–æ–∫–∞—Ç –≤–µ–ª–æ—Å–∏–ø–µ–¥—ñ–≤\n\
4.—Å–∞–º–æ–∫–∞—Ç–∏\n\n\
<b>–¢–∞–∫—Å—ñ</b>', parse_mode='html')     
    elif message.text.strip() == '–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¢–Ü–¶ –º. –î—Ä–æ–≥–æ–±–∏—á–∞':  
        bot.send_message(cid, '–§–æ—Ç–æ, —Ç–µ–ª, –ø–æ—à—Ç–∞, –≤—É–ª, —Å–æ—Ü –º–µ—Ä–µ–∂—ñ') 
    elif message.text.strip() == '–¢–µ–º–∞—Ç–∏—á–Ω—ñ –∫–∞—Ä—Ç–∏':
        bot.send_message(cid, '1. –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç\n\
2. –∫–∞—Ä—Ç–∞ —Å—Ç–µ—Ü—é–∫a')    
    elif message.text.strip() == '–†–µ–≥—ñ–æ–Ω':
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('–ë–æ—Ä–∏—Å–ª–∞–≤', callback_data = 'boryslav')
        btn2 = telebot.types.InlineKeyboardButton('–¢—Ä—É—Å–∫–∞–≤–µ—Ü—å', callback_data = 'truskavets')
        btn3 = telebot.types.InlineKeyboardButton('–ù–∞–≥—É—î–≤–∏—á—ñ', callback_data = 'nahuevychi')
        btn4 = telebot.types.InlineKeyboardButton('–¢—É—Å—Ç–∞–Ω—å', callback_data = 'tustan')
        btn5 = telebot.types.InlineKeyboardButton('–°—Ç–µ–±–Ω–∏–∫', callback_data = 'stebnyk')
        btn6 = telebot.types.InlineKeyboardButton('–°—Ç—Ä–∏–π', callback_data = 'stryi')
        btn7 = telebot.types.InlineKeyboardButton('–ó–∞–ª—É–∂–∞–Ω–∏', callback_data = 'zaluzhany')
        btn8 = telebot.types.InlineKeyboardButton('–ú–µ–¥–µ–Ω–∏—á—ñ', callback_data = 'medenychi')
        btn9 = telebot.types.InlineKeyboardButton('–°—Ö—ñ–¥–Ω–∏—Ü—è', callback_data = 'skhidnytsia')
        btn10 = telebot.types.InlineKeyboardButton('–°–∫–æ–ª–µ', callback_data = 'skole')
        markup.add(btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9,btn10)
        bot.send_message(cid, '–í–∏–±–µ—Ä—ñ—Ç—å —Ä–µ–≥—ñ–æ–Ω', reply_markup = markup)
    elif message.text.strip() == '–°—É–≤–µ–Ω—ñ—Ä–∏':
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–∞–º–æ–≤–∏—Ç–∏', callback_data = 'possible')
        markup.add(btn1)
        bot.send_message(cid, '–°—É–≤–µ–Ω—ñ—Ä–∏', reply_markup = markup)


@bot.callback_query_handler(func = lambda call: True)
def inline_menu(call):
    cid = call.message.chat.id
    data = call.data
    if data == "short_info":
        bot.send_message(cid, '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç –º—ñ—Å—å–∫–æ—ó —Ä–∞–¥–∏ - https://drohobych-rada.gov.ua')
    elif data == "boryslav":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "truskavets":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "nahuevychi":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "tustan":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "stebnyk":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "stryi":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "zaluzhany":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "medenychi":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "skhidnytsia":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "skole":
        bot.send_message(cid, f"{data}")
        bot.send_message(cid, "to be updated")
    elif data == "possible":
        bot.send_message(cid, "to be updated")
    

bot.infinity_polling()